#!/bin/bash
# ==============================================================================
# BASTI'S BASH DEFAULT SETTINGS
# Commonly used bash settings on various machines.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# ==============================================================================

# Find path to script 
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# Make sure this only gets sourced once
[[ -z ${USER_BASHRC} ]] && USER_BASHRC="1" || return

# = BASIC BASH SETTINGS ========================================================

# Extend path with bash commons 
PATH=${PATH}:${SCRIPTDIR}

# If not running interactively, don't do anything
[[ "$-" != *i* ]] && return

# Don't use ^D to exit
set -o ignoreeof

# Don't wait for job termination notification
set -o notify

# Make bash append rather than overwrite the history on disk
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Don"t put duplicate lines in the history.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups

# Ignore some controlling instructions
# HISTIGNORE is a colon-delimited list of patterns which should be excluded.
# The "&" is a special pattern which suppresses duplicate entries.
export HISTIGNORE=$"[ \t]*:&:[fb]g:exit"
export HISTIGNORE=$"[ \t]*:&:[fb]g:exit:ls" # Ignore the ls command as well

# Whenever displaying the prompt, write the previous line to disk
export PROMPT_COMMAND="history -a"

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# COLORED PROMT 
# ===========================================================

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# ALIAS SETTINGS
# ===========================================================

alias less="less -r" # raw control characters
alias whence="type -a" # where, of a sort
alias grep="grep --color" # colored grep
alias egrep="egrep --color=auto" # colored grep
alias fgrep="fgrep --color=auto" # colored grep
alias ls="ls -hF --color=tty" # classify files in colour
alias ll="ls -l" # long list
alias l="ll"
alias ..="cd .."
alias ...="cd ../../"
alias apt="apt-get"
alias aptdate="sudo bash -c \"apt-get update && apt-get upgrade -y && apt-get autoremove && apt-get autoclean\""

# find pattern in code
alias cgrep="grep -ilr --exclude-dir=.git --exclude=*.class --exclude=*.jar --exclude-dir=bin"

# Find out location of sourced default file ..
if [ ! -v ${SCRIPTDIR} ]; then
	# .. and if successful source bash commons functions as well	
	source ${SCRIPTDIR}/bbc
	echo "Sourcing basti's bash commons functions successful."
	# Aliases for quickly accessing commons functions
	alias cd="bbc-wd"
	alias table="bbc-table"
	alias timeout="bbc-timeout"
	alias fakename="bbc-fakename"
	alias szip="bbc-zip"
	alias clear="bbc-clear"
        alias c="clear"
        alias bb="bbc-bb"
	alias gita="bbc-git-all"
fi

# FINALIZATION
# ===========================================================
echo "Loading basti's bash defaults successful."
