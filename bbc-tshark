#!/bin/bash
# ==============================================================================
# TSHARK (BASTI's BASH COMMONS)
# A small frontend for more convenience when using tshark.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# ==============================================================================

FILTER=""
GRAPHICAL=0
EXEC="tshark"
IPADDR=$( ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' |\
 cut -f1  -d'/' ) # guess ip address

[ -z $( command -v tshark ) ] && { echo "tshark not installed.\n"; exit 1; }
[ -z $( command -v wireshark ) ] && { echo "wireshark not present.\n"; exit 1; }

help () {
[ ! -z "$1" ] && echo -e "\n$1\n"
cat << EOF
Usage:
    $( basename $0 ) -g -Y <DF>

Help Options:
    -h            Show help options
    -g            Use graphical wireshark instead of tshark
    -y <DF>       Apply manual display filter
    -m            Append local IP address to display filters
    -n            Append network protocol filters to display filters

EOF
exit 1
}

while getopts "hgy:mn" opt; do
    case "$opt" in
    g)  GRAPHICAL=1 ;;
	y)  FILTER=$OPTARG ;;
    m)  DF_IP="ip.src == $IPADDR" ;;
    n)  DF_NOISE="not (icmp||icmpv6||arp||dns||stp||llmnr||igmp||nbns||mdns||lldp||udp.dstport==1900||udp.port==67||udp.port==68)" ;;
    h)  help ;;
    *)  help ;;
	esac
done

[ $GRAPHICAL == 1 ] && EXEC="wireshark -k"
# setup display filters
FILTER="$FILTER§$DF_IP§$DF_NOISE"
FILTER=$( sed -r -e "s/^[ ]+//" -e "s/[ ]+$//" -e "s/§+/§/" \
-e "s/^§//" -e "s/§$//" -e "s/§/ and /g" <<< "$FILTER" )
[ ! -z "$FILTER" ] && FILTEROPT="-Y"

sed -e "s/ \"\"$//" <<< $( echo "$EXEC $FILTEROPT \"$FILTER\"" )
$EXEC $FILTEROPT "$FILTER"
